{
  "openapi": "3.0.0",
  "info": {
    "title": "API Rick & Morty",
    "description": "description",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001/",
      "description": "INTERNAL - testing"
    }
  ],
  "paths": {
    "/example ðŸ“Œ delete this": {
      "get": {
        "summary": "",
        "description": "",
        "operationId": "",
        "tags": [""],
        "parameters": [
          {
            "name": "",
            "in": "path",
            "required": true,
            "description": "ID of the task to get, 24 character hexadecimal",
            "schema": {
              "type": "string",
              "example": "62c65cfa13632e7de309ad07"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/***"
              },
              "example": {
                "example": "example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/***"
          }
        }
      }
    },
    "/characters": {
      "get": {
        "summary": "get ALL characters",
        "description": "returns a list of all characters in DB",
        "operationId": "getAllCharacters",
        "tags": ["Characters"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Character"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/characters/find/{id}": {
      "get": {
        "summary": "get character BY ID",
        "description": "returns object with corresponding ID from DB",
        "operationId": "getCharacterById",
        "tags": ["Characters"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the task to get, 24 character hexadecimal",
            "schema": {
              "type": "string",
              "example": "62c65cfa13632e7de309ad07"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/okSingleCharacter"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/characters/search": {
      "get": {
        "summary": "get character BY NAME",
        "description": "returns object with corresponding name from DB",
        "operationId": "getCharacterByName",
        "tags": ["Characters"],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "description": "character name",
            "schema": {
              "type": "string",
              "example": "Rick Sanchez"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/okSingleCharacter"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/characters/create": {
      "post": {
        "summary": "create NEW character",
        "description": "creates new character in DB from body",
        "operationId": "createCharacter",
        "tags": ["Characters"],
        "requestBody": {
          "description": "new character body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Character"
              },
              "example": {
                "name": "name",
                "imageUrl": "imageUrl"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Character"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/characters/update/{id}": {
      "put": {
        "summary": "update character BY ID",
        "description": "updates character with corresponding ID in DB from body",
        "operationId": "updateCharacter",
        "tags": ["Characters"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the task to get, 24 character hexadecimal",
            "schema": {
              "type": "string",
              "example": "62c65cfa13632e7de309ad07"
            }
          }
        ],
        "requestBody": {
          "description": "character to update body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Character"
              },
              "example": {
                "name": "name",
                "imageUrl": "imageUrl"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/okSingleCharacter"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/characters/delete/{id}": {
      "delete": {
        "summary": "delete character BY ID",
        "description": "deletes character with corresponding ID from DB",
        "operationId": "deleteCharacter",
        "tags": ["Characters"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the task to get, 24 character hexadecimal",
            "schema": {
              "type": "string",
              "example": "62c65cfa13632e7de309ad07"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "deleted"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Character": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "okSingleCharacter": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "$ref": "#/components/schemas/Character"
            }
          }
        }
      }
    }
  }
}
